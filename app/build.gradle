/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

// Set Java version compatibility for compilation and execution
java {
    sourceCompatibility = JavaVersion.VERSION_1_8 // Specify your desired Java version (e.g., 11, 1.8, etc.)
    targetCompatibility = JavaVersion.VERSION_1_8 // Specify the same or lower version for the target compatibility
}

repositories {
    // Use Maven Central for resolving dependencies.
    // repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

dependencies {
    implementation 'com.github.jagrosh:DiscordIPC:a8d6631'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.3.5'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    // Use JUnit Jupiter for testing.
    testImplementation('org.junit.jupiter:junit-jupiter:5.9.1')
}

application {
    // Define the main class for the application.
    mainClass = 'multistylerpc.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
